#!/bin/bash

declare TRACE
[[ "${TRACE}" == 1 ]] && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail
set -o noclobber

readme() {
  rm README.md

  cat <<EOF >>README.md
# bash-utils

[![Makefile CI](https://github.com/rodmoioliveira/bash-utils/actions/workflows/makefile.yml/badge.svg)](https://github.com/rodmoioliveira/bash-utils/actions/workflows/makefile.yml)

This is my collection of useful shell scripts for Linux (ubuntu-latest) and Mac
(macos-latest).

# index

- [installation](https://github.com/rodmoioliveira/bash-utils#installation)
- [scripts descriptions](https://github.com/rodmoioliveira/bash-utils#scripts-descriptions)
  - [git-bump](https://github.com/rodmoioliveira/bash-utils#git-bump)
  - [pfmt](https://github.com/rodmoioliveira/bash-utils#pfmt)
- [future scripts](https://github.com/rodmoioliveira/bash-utils#future-scripts)
- [completions](https://github.com/rodmoioliveira/bash-utils#completions)
- [make recipes](https://github.com/rodmoioliveira/bash-utils#make-recipes)
- [style](https://github.com/rodmoioliveira/bash-utils#style)
- [reference](https://github.com/rodmoioliveira/bash-utils#reference)

# installation

To install all the scripts, run:

\`\`\`txt
make dependencies symlink
\`\`\`

To uninstall all the scripts, you can run:

\`\`\`txt
make unsymlink
\`\`\`

# scripts descriptions

## git-bump

\`\`\`txt
git-bump --help

$(./scripts/git-bump 2>&1 --help)
\`\`\`

## pfmt

\`\`\`txt
pfmt --help

$(./scripts/pfmt 2>&1 --help)
\`\`\`

# future scripts

- [ ] \`fm\` - Filter and transform text and files accordingly predefined regex rules.
- [x] \`git-bump\` - Bump the current tag version to the next version accordingly to
  semantic versioning specifications.
- [ ] \`git-dirty\` - Recursively check your local git repositories for unstaged files.
- [ ] \`git-changelog\` - Recursively generate CHANGELOG files for your git repositories.
- [x] \`pfmt\` - Format plain text with sd.

# completions

Completions for each script are available for the \`zsh\` shell in the
[complete](https://github.com/rodmoioliveira/bash-utils/tree/main/complete) directory.
To enable shell completion, copy the files to one of your \`\$fpath\` directories.

# make recipes

\`\`\`txt
make help

$(make help)
\`\`\`

# style

- [progrium/bashstyle](https://github.com/progrium/bashstyle/blob/master/README.md)
- [Google Shell Style Guide](https://google.github.io/styleguide/shellguide.html)

# reference
- [Bash Reference Manual](https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html)
- [Bash script setup](https://caiustheory.com/bash-script-setup/)
- [Use Bash Strict Mode (Unless You Love Debugging)](http://redsymbol.net/articles/unofficial-bash-strict-mode/)
- [How "Exit Traps" Can Make Your Bash Scripts Way More Robust And Reliable](http://redsymbol.net/articles/bash-exit-traps/)
- [How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?](http://mywiki.wooledge.org/BashFAQ/001)
- [Obsolete and deprecated syntax](https://wiki.bash-hackers.org/scripting/obsolete)
- [Portability talk](https://wiki.bash-hackers.org/scripting/nonportable)
- [Using Trap to Exit Bash Scripts Cleanly](https://www.putorius.net/using-trap-to-exit-bash-scripts-cleanly.html)
- [Bash | Tips & Tricks I would have wanted to know when I started](https://ricma.co/posts/tech/tutorials/bash-tip-tricks/)
EOF

  sd '(make\[1\]:.+\n)' '' README.md
}

trap readme EXIT
