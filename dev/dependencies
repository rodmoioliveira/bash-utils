#!/bin/bash

declare TRACE
[[ "${TRACE}" == 1 ]] && set -o xtrace

id_distro() {
  declare -A osInfo
  osInfo["/etc/debian_version"]="apt-get install -y"
  osInfo["/etc/alpine-release"]="apk --update add"
  osInfo["/etc/centos-release"]="yum install -y"
  osInfo["/etc/fedora-release"]="dnf install -y"
  osInfo["/etc/arch-version"]="pacman -S --noconfirm"

  for f in "${!osInfo[@]}"; do
    if [[ -f "${f}" ]]; then
      package_manager=${osInfo["${f}"]}
    fi
  done
}

install_linux() {
  printf "============================================\n"
  printf "============================================\n"
  cat /etc/os-release
  printf "============================================\n"
  printf "============================================\n"
  curl -sS https://webi.sh/shfmt | sh
  eval "${package_manager} shellcheck"
  curl https://sh.rustup.rs -sSf | sh -s -- -y
  source "${HOME}/.cargo/env"
  cargo install sd
  cargo install fd-find
  cargo install ripgrep
  cargo install exa
  cargo install typos-cli
  cargo install --locked bat
}

install_mac() {
  brew install shellcheck
  brew install shfmt
  brew install sd
  brew install fd
  brew install ripgrep
  brew install exa
  brew install typos-cli
  brew install bat
  brew install gnu-getopt
  echo 'export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"' | sudo tee -a ~/.bash_profile
  echo 'export FLAGS_GETOPT_CMD="$(brew --prefix gnu-getopt)/bin/getopt"' | sudo tee -a ~/.bash_profile
  source ~/.bash_profile
}

install() {
  case "${OS}" in
  Linux)
    id_distro
    install_linux
    ;;
  Mac)
    install_mac
    ;;
  *) ;;
  esac
}

check_os() {
  unameOut="$(uname -s)"

  case "${unameOut}" in
  Linux*)
    OS="Linux"
    ;;
  Darwin*)
    OS="Mac"
    ;;
  CYGWIN* | MINGW* | *)
    printf 1>&2 "No support for OS %s\n" "${OS}"
    exit 1
    ;;
  esac
}

main() {
  check_os
  install
}

main
